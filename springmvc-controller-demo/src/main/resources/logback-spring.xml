<?xml version="1.0" encoding="UTF-8" ?>
<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出 -->
<!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true -->
<!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration>
    <contextName>logback</contextName>
    <!-- name的值是变量的名称，value的值时变量定义的值。通过定义的值会被插入到logger上下文中。定义变量后，可以使“${}”来使用变量。 -->
    <springProperty scope="context" name="spring.application.name" source="spring.application.name"></springProperty>
    <springProperty scope="context" name="log.path" source="log.path"></springProperty>
    <property name="log.path" value="${log.path}"/>

    <property name="log.name" value="${spring.application.name}"/>
    <timestamp key="nowDate" datePattern="yyyyMMdd"/>

    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <!--配置规则类的位置-->
    <!-- 这个是记录日志的节点的本机IP    -->
    <conversionRule conversionWord="ip" converterClass="kev.spring.springbucks.waiter.support.IPLogConvertor"/>

    <!--输出到控制台-->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!--此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>debug</level>
        </filter>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <!-- 设置字符集 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 输出到按天分割的文件-->
    <appender name="DailyFileAppender"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder>
            <pattern>
                {"level":"%level","time":"%d{yyyy-MM-dd HH:mm:ss.SSS,GMT+8}","ip":"%ip","remote_ip":"%X{remote_ip},"host":"%X{host}","thread":"%thread","path":"%X{uri}","class":"%c{36}","line":"%L","msg":"%m","stack_trace":"%exception{20}"}%n
            </pattern>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/${log.name}.log_json.%d{yyyyMMdd}</fileNamePattern>
            <!--日志文件保留天数-->
            <maxHistory>10</maxHistory>
        </rollingPolicy>
    </appender>


    <springProfile name="dev">
        <root level="debug">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="DailyFileAppender"/>
        </root>
    </springProfile>
    <springProfile name="test">
        <root level="info">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="DailyFileAppender"/>
        </root>
    </springProfile>
    <springProfile name="pre,prod">
        <root level="info">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="DailyFileAppender"/>
        </root>
    </springProfile>

</configuration>
